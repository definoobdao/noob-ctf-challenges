//    â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–„     â–„â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    â–„â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–„â–ˆ       â–ˆâ–ˆâ–ˆâ–„â–„â–„â–„    â–„â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–„   â–„â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–„  â–€â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–„  
//    â–ˆâ–ˆâ–ˆ   â–€â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ       â–ˆâ–ˆâ–ˆâ–€â–€â–€â–ˆâ–ˆâ–„ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ 
//    â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ    â–ˆâ–€    â–ˆâ–ˆâ–ˆ    â–ˆâ–€  â–ˆâ–ˆâ–ˆâ–Œ      â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ 
//    â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ  â–„â–ˆâ–ˆâ–ˆâ–„â–„â–„      â–„â–ˆâ–ˆâ–ˆâ–„â–„â–„     â–ˆâ–ˆâ–ˆâ–Œ      â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ  â–„â–ˆâ–ˆâ–ˆâ–„â–„â–„â–ˆâ–ˆâ–€  
//    â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ â–€â–€â–ˆâ–ˆâ–ˆâ–€â–€â–€     â–€â–€â–ˆâ–ˆâ–ˆâ–€â–€â–€     â–ˆâ–ˆâ–ˆâ–Œ      â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ â–€â–€â–ˆâ–ˆâ–ˆâ–€â–€â–€â–ˆâ–ˆâ–„  
//    â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ    â–ˆâ–„    â–ˆâ–ˆâ–ˆ        â–ˆâ–ˆâ–ˆ       â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–„ 
//    â–ˆâ–ˆâ–ˆ   â–„â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ        â–ˆâ–ˆâ–ˆ       â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆ 
//    â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–€    â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆ        â–ˆâ–€         â–€â–ˆ   â–ˆâ–€   â–€â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–€   â–€â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–€  â–„â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–€  
//                                                                                          
//
//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNXKK000OOOOO000KKXNNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOkdlc;,'....          ....',:coxOKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMMMMMMMWXOdc;'.    ...,;:ccllllllllllc:;,'..    .':lx0NWMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMMMMW0d:.   .';coxO0XNWWMMMMMMMMMMMMMMMMWNXK0koc;..  .':dOXWMMMMMMMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMWKd,.  .:okKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0xo:'.  .:xKWMMMMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMW0l.  .ckXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWN0dc'. .;dKWMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMKl.  ,xXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWN0o;. .:kNMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMNx'  'xNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKd;. ,xXMMMMMMMMMMMMMMM
//MMMMMMMMMMKc. .oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMMWKkKWMMMMMMMMMMNOc. 'xNMMMMMMMMMMMMM
//MMMMMMMMWO,  ,OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNd;o0WMMNx..xWMMMMMMMMMMMMW0c. ,xNMMMMMMMMMMM
//MMMMMMMWk'  :KMMMMMMMMMMMMMMMMWWMMMMMMMMMMMMMMMMMMMMMMMW0c..cO0c.,kWMMMMMMMMMMMMMMMWO;  ;OWMMMMMMMMM
//MMMMMMWk.  :XMMMMMMMMN0KWMMMNx;oNMMMMMMMMMMMMMMMMMMMMMMMMW0l'...cKMMMMMMMMMMMMMMMMMMMXl. .kWMMMMMMMM
//MMMMMM0'  ;KMMMMMMMMM0,.dNW0:.,OWMMMMMMMMMMMMMMMMMMMMMMMMMMWk. .ckXMMMMMMMMMMMMMMMMMMMNo. .xWMMMMMMM
//MMMMMX:  .kMMMMMMMMMMWk'.:c..oXMMMMMMMMMMMMMMMMMMMMMMMMMMMWk'.l0d,,l0WMMMMMMMMMMMMMMMMMNc  .xNMMMMMM
//MMMMWx.  lNMMMMMMMMMMMMK:  ,0WMMMMMMMMMMMMMMMMMMMMMMMMMMMXl. cXMMKo,'oXMMMMMMMMMMMMMMMMMK;  .dNMMMMM
//MMMMX:  .OMMMMMMMMMMMMWk'.',c0WMMMMMMMMMMMMMMMMMMMMMMMMMMk,,dXMMMMMNKKNMMMMMMMMMMMMMMMMMMk.  .kWMMMM
//MMMWx.  cNMMMMMMMMMMMXo..oXx'.:kNMMMMMMMMMMMMMMMMMMMMMMMMWNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNo   ,0MMMM
//MMM0,  'OMMMMMMMMMMMWx..xWMMKl..cXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMX:   ;0MMM
//MMWo  .dWMMMMMMMMMMMMN0XWMMMMWKkOWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0lox0XWMMMMMM0;   ;KMM
//MM0'  ;KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXx:...:kWMMMMMK;  .dWM
//MWo  .xWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMx..lx0WMMMMMMk.  :NM
//MX;  ;KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK; ,KMMMMMMMMMK,  '0M
//MO.  oWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNc .dWMMMMMMMMMNc  .xM
//Md. .kMMMMMMMMMMWNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO. cNMMMMMMMMMMMx.  lW
//Wl  ,KMMMMMN0dl::ckWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMx..OMMMMMMMMMMMMO.  cN
//Nc  :XMMMNx;.. .lKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMx.;KMMMMMMMMMMMMK,  :N
//X:  cNMMMXxdOKl.oWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd.cNMMMMMMMMMMMMK,  cN
//X:  cNMMMMMMMMK,'OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMX:.oWMMMMMMMMMMMMO. .xW
//X:  cNMMMMMMMMWx.,OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXl..kMMMMMMMMMMMMWl  ,KM
//Nc  :XMMMMMMMMMNo.,OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO;  .:lokKWMMMMMMM0'  oWM
//Wo  ,KMMMMMMMMMMXc 'kNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0c. .x0xc'..oNMMMMMWo  '0MM
//Mk. .kMMMMMMMMMMMXl..;ldxkkkOOKXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNx. .'.:xXWXo..xWMMMMO. .dWMM
//MX:  cNMMMMMMMMMMMW0o;..      ..:OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNo. .kXOc.'dNWo.;XMMMK;  :XMMM
//MWx. .xWMMMMMMMMMMMMMWX0Oxddoc'  .oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXc  ';'cOXOokNMO.'0MMXc  ,0MMMM
//MMNc  ,0MMMMMMMMMMMMMMMMMMMMMMNO:. ,kNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0; .lXNd'.:kNMMNl.,KMXc  'OWMMMM
//MMMK;  ;KMMMMMMMMMMMMMMMMMMMMMMMWO;  ,xXWMMMMMMMMMMMMMMMMWXkxxkO0Oxc. 'kWMMWKo..,lo;.'xWK:  'OWMMMMM
//MMMM0;  ;0WMMMMMMMMMMMMMMMMMMMMMMMNx,  'lONWMMMMMMMMMMMNkc.     .  .,dXMMMMMMWXxc;,:dKNO,  ,0WMMMMMM
//MMMMMK:  .xNMMMMMMMMMMMMMMMMMMMMMMMMNkc'..'cdO0KKKKK0xl,.,lxxxxxxxk0NMMMMMMMMMMMMWWMMXo. .cKMMMMMMMM
//MMMMMMXo.  :OWMMMMMMMMMMMMMMMMMMMMMMMMMNOdl:;,,,,,,,,;cd0NMMMMMMMMMMMMMMMMMMMMMMMMMNk,  'xNMMMMMMMMM
//MMMMMMMWO:  .:ONMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXKKKKXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMNk;  .lKWMMMMMMMMMM
//MMMMMMMMMNk;.  ,oONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXx,  .c0WMMMMMMMMMMMM
//MMMMMMMMMMMWOl'   'cd0NWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNkc.  .l0WMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMNOl,.  ..:lx0XWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNKxc'  .,dKWMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMMWKkl;.   ..,coxOKXWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWX0koc,.  .,oONMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMMMMMMWXOxl;'.    ..,;clodxkOO0000000000OOOkxxdolc;,..   .'cd0NMMMMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMMMMMMMMMMMWNKOdlc;'..          .....             ..';cokKNMMMMMMMMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNX0Okxdolcc:::::::::ccccllodxkOKXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM

pragma solidity ^0.8.10;
import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";


contract NOOBPOINTSToken is ERC20, Ownable {
  mapping (address => nicakname) public nicknameOf;
  mapping(address => bool) public Pointcontractaddress;
  
  struct nicakname{
   string name;
   bool isSet;
  }

  event setnicknamelog( string nickname, address calladdress);
  event changenicknamelog( string oldnickname, string newnickname, address calladdress);

  constructor() ERC20("NoobCtf-Point", unicode"ðŸ˜‹") {
  }

  modifier onlyPointcontract(){
    require(Pointcontractaddress[msg.sender], "fuckoff!");
    _;
  }
  function setNickname(string memory _nickname) public {
    require(nicknameOf[msg.sender].isSet == false, "u have already set the name.");
    nicknameOf[msg.sender].isSet = true;
    nicknameOf[msg.sender].name = _nickname;
    emit setnicknamelog(_nickname, msg.sender);
  }
  function changeNickname(string memory _nickname) public{
     require(nicknameOf[msg.sender].isSet, "u have not set the name");
     emit changenicknamelog(nicknameOf[msg.sender].name, _nickname, msg.sender);
     nicknameOf[msg.sender].name = _nickname;
  }

  function setPointcontract(address Pointcontract,bool realcontract) public onlyOwner{
    Pointcontractaddress[Pointcontract] = realcontract;
  }

  function sendpotion(address recipient, uint256 amount) external onlyPointcontract{
    uint256 multiplicator = 10 ** 18;
    _mint(recipient, amount * multiplicator);
  }


  function transfer (address recipient, uint256 amount) public override returns (bool) {
    require(false, "u can't transfer points");
    return false;
  }
  function transferFrom (address sender, address recipient, uint256 amount) public override returns (bool) {
    require(false, "u can't transfer points");
    return false;
  }
}